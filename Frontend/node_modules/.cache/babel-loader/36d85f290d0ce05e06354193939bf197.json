{"ast":null,"code":"var parse = require('../parse/index.js');\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js');\nvar compareAsc = require('../compare_asc/index.js');\n\n/**\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n */\nfunction differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft);\n  var dateRight = parse(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  return sign * (difference - isLastDayNotFull);\n}\nmodule.exports = differenceInDays;","map":{"version":3,"names":["parse","require","differenceInCalendarDays","compareAsc","differenceInDays","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","sign","difference","Math","abs","setDate","getDate","isLastDayNotFull","module","exports"],"sources":["/Users/hore.11/github/movies/Frontend/node_modules/date-fns/difference_in_days/index.js"],"sourcesContent":["var parse = require('../parse/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n */\nfunction differenceInDays (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight))\n  dateLeft.setDate(dateLeft.getDate() - sign * difference)\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastDayNotFull)\n}\n\nmodule.exports = differenceInDays\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACxC,IAAIC,wBAAwB,GAAGD,OAAO,CAAC,yCAAyC,CAAC;AACjF,IAAIE,UAAU,GAAGF,OAAO,CAAC,yBAAyB,CAAC;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,gBAAgBA,CAAEC,aAAa,EAAEC,cAAc,EAAE;EACxD,IAAIC,QAAQ,GAAGP,KAAK,CAACK,aAAa,CAAC;EACnC,IAAIG,SAAS,GAAGR,KAAK,CAACM,cAAc,CAAC;EAErC,IAAIG,IAAI,GAAGN,UAAU,CAACI,QAAQ,EAAEC,SAAS,CAAC;EAC1C,IAAIE,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACV,wBAAwB,CAACK,QAAQ,EAAEC,SAAS,CAAC,CAAC;EACxED,QAAQ,CAACM,OAAO,CAACN,QAAQ,CAACO,OAAO,EAAE,GAAGL,IAAI,GAAGC,UAAU,CAAC;;EAExD;EACA;EACA,IAAIK,gBAAgB,GAAGZ,UAAU,CAACI,QAAQ,EAAEC,SAAS,CAAC,KAAK,CAACC,IAAI;EAChE,OAAOA,IAAI,IAAIC,UAAU,GAAGK,gBAAgB,CAAC;AAC/C;AAEAC,MAAM,CAACC,OAAO,GAAGb,gBAAgB"},"metadata":{},"sourceType":"script"}