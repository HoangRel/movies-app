{"ast":null,"code":"var _jsxFileName = \"/Users/hore.11/github/movies/Frontend/src/pages/browse/NavBar.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SearchIcon } from \"./Icon\";\nimport styles from \"./NavBar.module.css\";\n\n// component NavBar dùng chung cho trang chủ và Search page\nconst NavBar = () => {\n  const [isTransparent, setIsTransparent] = useState(true);\n\n  // đều kiện thay đổi backgound\n  useEffect(() => {\n    const scrollHandler = () => {\n      if (window.scrollY > 100) {\n        setIsTransparent(false);\n      } else {\n        setIsTransparent(true);\n      }\n    };\n    window.addEventListener(\"scroll\", scrollHandler);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  }, []);\n\n  // chuyển trang\n  const navigate = useNavigate();\n  const clickHandler = () => {\n    navigate(\"/\");\n  };\n  const searchHandler = () => {\n    navigate(\"/search\");\n  };\n\n  // class động cho việc thay đổi background\n  const isTransparentClass = `${styles.navbar} ${isTransparent ? styles.transparent : styles.dark}`;\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: isTransparentClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    onClick: clickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Movie App\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.search,\n    onClick: searchHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\nexport default NavBar;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","SearchIcon","styles","NavBar","isTransparent","setIsTransparent","scrollHandler","window","scrollY","addEventListener","removeEventListener","navigate","clickHandler","searchHandler","isTransparentClass","navbar","transparent","dark","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","search"],"sources":["/Users/hore.11/github/movies/Frontend/src/pages/browse/NavBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { SearchIcon } from \"./Icon\";\n\nimport styles from \"./NavBar.module.css\";\n\n// component NavBar dùng chung cho trang chủ và Search page\nconst NavBar = () => {\n  const [isTransparent, setIsTransparent] = useState(true);\n\n  // đều kiện thay đổi backgound\n  useEffect(() => {\n    const scrollHandler = () => {\n      if (window.scrollY > 100) {\n        setIsTransparent(false);\n      } else {\n        setIsTransparent(true);\n      }\n    };\n\n    window.addEventListener(\"scroll\", scrollHandler);\n\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  }, []);\n\n  // chuyển trang\n  const navigate = useNavigate();\n\n  const clickHandler = () => {\n    navigate(\"/\");\n  };\n\n  const searchHandler = () => {\n    navigate(\"/search\");\n  };\n\n  // class động cho việc thay đổi background\n  const isTransparentClass = `${styles.navbar} ${\n    isTransparent ? styles.transparent : styles.dark\n  }`;\n\n  return (\n    <nav className={isTransparentClass}>\n      <h1 className={styles.title} onClick={clickHandler}>\n        Movie App\n      </h1>\n      <div className={styles.search} onClick={searchHandler}>\n        <SearchIcon />\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,UAAU,QAAQ,QAAQ;AAEnC,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAGA,CAAA,KAAM;MAC1B,IAAIC,MAAM,CAACC,OAAO,GAAG,GAAG,EAAE;QACxBH,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLA,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC;IAEDE,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,aAAa,CAAC;IAEhD,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,aAAa,CAAC;IACrD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBD,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BF,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAI,GAAEZ,MAAM,CAACa,MAAO,IAC1CX,aAAa,GAAGF,MAAM,CAACc,WAAW,GAAGd,MAAM,CAACe,IAC7C,EAAC;EAEF,oBACEpB,KAAA,CAAAqB,aAAA;IAAKC,SAAS,EAAEL,kBAAmB;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjC5B,KAAA,CAAAqB,aAAA;IAAIC,SAAS,EAAEjB,MAAM,CAACwB,KAAM;IAACC,OAAO,EAAEf,YAAa;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAEpD,CAAK,eACL5B,KAAA,CAAAqB,aAAA;IAAKC,SAAS,EAAEjB,MAAM,CAAC0B,MAAO;IAACD,OAAO,EAAEd,aAAc;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpD5B,KAAA,CAAAqB,aAAA,CAACjB,UAAU;IAAAmB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CACV,CACF;AAEV,CAAC;AAED,eAAetB,MAAM"},"metadata":{},"sourceType":"module"}