{"ast":null,"code":"var startOfISOYear = require('../start_of_iso_year/index.js');\nvar addWeeks = require('../add_weeks/index.js');\nvar MILLISECONDS_IN_WEEK = 604800000;\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\nfunction getISOWeeksInYear(dirtyDate) {\n  var thisYear = startOfISOYear(dirtyDate);\n  var nextYear = startOfISOYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf();\n  // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}\nmodule.exports = getISOWeeksInYear;","map":{"version":3,"names":["startOfISOYear","require","addWeeks","MILLISECONDS_IN_WEEK","getISOWeeksInYear","dirtyDate","thisYear","nextYear","diff","valueOf","Math","round","module","exports"],"sources":["/Users/hore.11/github/movies/Frontend/node_modules/date-fns/get_iso_weeks_in_year/index.js"],"sourcesContent":["var startOfISOYear = require('../start_of_iso_year/index.js')\nvar addWeeks = require('../add_weeks/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\nfunction getISOWeeksInYear (dirtyDate) {\n  var thisYear = startOfISOYear(dirtyDate)\n  var nextYear = startOfISOYear(addWeeks(thisYear, 60))\n  var diff = nextYear.valueOf() - thisYear.valueOf()\n  // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = getISOWeeksInYear\n"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AAC7D,IAAIC,QAAQ,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAE/C,IAAIE,oBAAoB,GAAG,SAAS;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAAEC,SAAS,EAAE;EACrC,IAAIC,QAAQ,GAAGN,cAAc,CAACK,SAAS,CAAC;EACxC,IAAIE,QAAQ,GAAGP,cAAc,CAACE,QAAQ,CAACI,QAAQ,EAAE,EAAE,CAAC,CAAC;EACrD,IAAIE,IAAI,GAAGD,QAAQ,CAACE,OAAO,EAAE,GAAGH,QAAQ,CAACG,OAAO,EAAE;EAClD;EACA;EACA;EACA,OAAOC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAGL,oBAAoB,CAAC;AAChD;AAEAS,MAAM,CAACC,OAAO,GAAGT,iBAAiB"},"metadata":{},"sourceType":"script"}