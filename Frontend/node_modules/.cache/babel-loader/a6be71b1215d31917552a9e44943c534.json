{"ast":null,"code":"var parse = require('../parse/index.js');\nvar addDays = require('../add_days/index.js');\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? Number(dirtyOptions.weekStartsOn) || 0 : 0;\n  var date = parse(dirtyDate);\n  var day = Number(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  return addDays(date, diff);\n}\nmodule.exports = setDay;","map":{"version":3,"names":["parse","require","addDays","setDay","dirtyDate","dirtyDay","dirtyOptions","weekStartsOn","Number","date","day","currentDay","getDay","remainder","dayIndex","diff","module","exports"],"sources":["/Users/hore.11/github/movies/Frontend/node_modules/date-fns/set_day/index.js"],"sourcesContent":["var parse = require('../parse/index.js')\nvar addDays = require('../add_days/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setDay (dirtyDate, dirtyDay, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = date.getDay()\n\n  var remainder = day % 7\n  var dayIndex = (remainder + 7) % 7\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setDay\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACxC,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAsB,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,MAAMA,CAAEC,SAAS,EAAEC,QAAQ,EAAEC,YAAY,EAAE;EAClD,IAAIC,YAAY,GAAGD,YAAY,GAAIE,MAAM,CAACF,YAAY,CAACC,YAAY,CAAC,IAAI,CAAC,GAAI,CAAC;EAC9E,IAAIE,IAAI,GAAGT,KAAK,CAACI,SAAS,CAAC;EAC3B,IAAIM,GAAG,GAAGF,MAAM,CAACH,QAAQ,CAAC;EAC1B,IAAIM,UAAU,GAAGF,IAAI,CAACG,MAAM,EAAE;EAE9B,IAAIC,SAAS,GAAGH,GAAG,GAAG,CAAC;EACvB,IAAII,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAC,IAAI,CAAC;EAElC,IAAIE,IAAI,GAAG,CAACD,QAAQ,GAAGP,YAAY,GAAG,CAAC,GAAG,CAAC,IAAIG,GAAG,GAAGC,UAAU;EAC/D,OAAOT,OAAO,CAACO,IAAI,EAAEM,IAAI,CAAC;AAC5B;AAEAC,MAAM,CAACC,OAAO,GAAGd,MAAM"},"metadata":{},"sourceType":"script"}