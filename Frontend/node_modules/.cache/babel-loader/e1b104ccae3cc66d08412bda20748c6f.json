{"ast":null,"code":"var _jsxFileName = \"/Users/hore.11/github/movies/Frontend/src/pages/browse/MovieList/MovieList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport MovieDetail from './MovieDetail';\nimport useAPI from '../../../hooks/useAPI';\nimport styles from './MovieList.module.css';\n\n// component render các list phim\nconst MovieList = () => {\n  const {\n    movies,\n    isLoading,\n    isError,\n    fetchMovies\n  } = useAPI();\n  const [showMovie, setShowMovie] = useState(false);\n  const [isMovie, setIsMovie] = useState(null);\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const genres = [{\n    title: 'Original',\n    keyword: 'fetchTrending'\n  }, {\n    title: 'Xu hướng',\n    keyword: 'fetchNetflixOriginals'\n  }, {\n    title: 'Xếp hạng cao',\n    keyword: 'fetchTopRated'\n  }, {\n    title: 'Hành động',\n    keyword: 'fetchActionMovies'\n  }, {\n    title: 'Hài',\n    keyword: 'fetchComedyMovies'\n  }, {\n    title: 'Kinh dị',\n    keyword: 'fetchHorrorMovies'\n  }, {\n    title: 'Lãng mạn',\n    keyword: 'fetchRomanceMovies'\n  }, {\n    title: 'Tài liệu',\n    keyword: 'fetchDocumentaries'\n  }];\n  useEffect(() => {\n    genres.forEach(genre => {\n      fetchMovies(genre.keyword);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchMovies]);\n\n  // xét các điều kiện để hiện/ẩn hay chuyển phim\n  const clickHandler = (movie, genre) => {\n    if (!showMovie) {\n      setIsMovie(movie);\n      setShowMovie(true);\n      setSelectedGenre(genre);\n    } else {\n      if (movie.id === isMovie.id) {\n        setShowMovie(false);\n      } else {\n        setIsMovie(movie);\n        setSelectedGenre(genre);\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.topList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.reject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }, \"Loading...\"), isError['fetchTrending'] && /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.reject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, isError['fetchTrending']), movies['fetchTrending'] && movies['fetchTrending'].map(movie => /*#__PURE__*/React.createElement(\"li\", {\n    key: movie.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: movie.poster,\n    alt: movie.title,\n    onClick: () => clickHandler(movie, 'fetchTrending'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })))), showMovie && selectedGenre === 'fetchTrending' && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: isMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), genres.slice(1).map(genre => /*#__PURE__*/React.createElement(\"div\", {\n    key: genre.keyword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.genres,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, genre.title), /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.navList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.reject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 27\n    }\n  }, \"Loading...\"), isError[genre.keyword] && /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.reject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, isError[genre.keyword]), movies[genre.keyword] && movies[genre.keyword].map(movie => /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.image,\n    key: movie.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: movie.backdrop.indexOf('.jpg') === -1 ? movie.poster : movie.backdrop,\n    alt: movie.title,\n    onClick: () => clickHandler(movie, genre.keyword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  })))), showMovie && selectedGenre === genre.keyword && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: isMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default MovieList;","map":{"version":3,"names":["React","useEffect","useState","MovieDetail","useAPI","styles","MovieList","movies","isLoading","isError","fetchMovies","showMovie","setShowMovie","isMovie","setIsMovie","selectedGenre","setSelectedGenre","genres","title","keyword","forEach","genre","clickHandler","movie","id","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","topList","reject","map","key","src","poster","alt","onClick","movieData","slice","navList","image","backdrop","indexOf"],"sources":["/Users/hore.11/github/movies/Frontend/src/pages/browse/MovieList/MovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport MovieDetail from './MovieDetail';\n\nimport useAPI from '../../../hooks/useAPI';\nimport styles from './MovieList.module.css';\n\n// component render các list phim\nconst MovieList = () => {\n  const { movies, isLoading, isError, fetchMovies } = useAPI();\n\n  const [showMovie, setShowMovie] = useState(false);\n  const [isMovie, setIsMovie] = useState(null);\n  const [selectedGenre, setSelectedGenre] = useState(null);\n\n  const genres = [\n    { title: 'Original', keyword: 'fetchTrending' },\n    { title: 'Xu hướng', keyword: 'fetchNetflixOriginals' },\n    { title: 'Xếp hạng cao', keyword: 'fetchTopRated' },\n    { title: 'Hành động', keyword: 'fetchActionMovies' },\n    { title: 'Hài', keyword: 'fetchComedyMovies' },\n    { title: 'Kinh dị', keyword: 'fetchHorrorMovies' },\n    { title: 'Lãng mạn', keyword: 'fetchRomanceMovies' },\n    { title: 'Tài liệu', keyword: 'fetchDocumentaries' },\n  ];\n\n  useEffect(() => {\n    genres.forEach(genre => {\n      fetchMovies(genre.keyword);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchMovies]);\n\n  // xét các điều kiện để hiện/ẩn hay chuyển phim\n  const clickHandler = (movie, genre) => {\n    if (!showMovie) {\n      setIsMovie(movie);\n      setShowMovie(true);\n      setSelectedGenre(genre);\n    } else {\n      if (movie.id === isMovie.id) {\n        setShowMovie(false);\n      } else {\n        setIsMovie(movie);\n        setSelectedGenre(genre);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <ul className={styles.topList}>\n        {isLoading && <p className={styles.reject}>Loading...</p>}\n        {isError['fetchTrending'] && (\n          <p className={styles.reject}>{isError['fetchTrending']}</p>\n        )}\n        {movies['fetchTrending'] &&\n          movies['fetchTrending'].map(movie => (\n            <li key={movie.id}>\n              <img\n                src={movie.poster}\n                alt={movie.title}\n                onClick={() => clickHandler(movie, 'fetchTrending')}\n              />\n            </li>\n          ))}\n      </ul>\n      {showMovie && selectedGenre === 'fetchTrending' && (\n        <MovieDetail movieData={isMovie} />\n      )}\n      {/* Các danh sách phim còn lại */}\n      {genres.slice(1).map(genre => (\n        <div key={genre.keyword}>\n          <h2 className={styles.genres}>{genre.title}</h2>\n          <ul className={styles.navList}>\n            {isLoading && <p className={styles.reject}>Loading...</p>}\n            {isError[genre.keyword] && (\n              <p className={styles.reject}>{isError[genre.keyword]}</p>\n            )}\n            {movies[genre.keyword] &&\n              movies[genre.keyword].map(movie => (\n                <li className={styles.image} key={movie.id}>\n                  <img\n                    src={\n                      movie.backdrop.indexOf('.jpg') === -1\n                        ? movie.poster\n                        : movie.backdrop\n                    }\n                    alt={movie.title}\n                    onClick={() => clickHandler(movie, genre.keyword)}\n                  />\n                </li>\n              ))}\n          </ul>\n          {showMovie && selectedGenre === genre.keyword && (\n            <MovieDetail movieData={isMovie} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MovieList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}